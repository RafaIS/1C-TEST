#Область ГрафическаяСхема

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ГрафическаяСхема = "" Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектХЗ = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресВХранилище));
	ГрафСхема = РегистрыСведений.ГрафическиеСхемы.СоздатьМенеджерЗаписи();
	ГрафСхема.Наименование = ТекущийОбъект.Ссылка;
	ГрафСхема.ГрафическаяСхема1С = ОбъектХЗ;
	ГрафСхема.Записать();
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ГрафСхема = РегистрыСведений.ГрафическиеСхемы.СоздатьМенеджерЗаписи();
	ГрафСхема.Наименование = Объект.Ссылка;
	ГрафСхема.Прочитать();
	
	Если ГрафСхема.Выбран() Тогда
		ЗагружаемаяСхема = ГрафСхема.ГрафическаяСхема1С.Получить();
		ГрафическаяСхема = ЗагружаемаяСхема;
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ЗагружаемаяСхема, Этаформа.УникальныйИдентификатор);
		АдресВХранилище = АдресВоВременномХранилище;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафическаяСхемаПриИзменении(Элемент)
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ГрафическаяСхема,Этаформа.УникальныйИдентификатор);
	АдресВХранилище = АдресВоВременномХранилище;
КонецПроцедуры

#КонецОбласти
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#Область РаботаСXML

&НаКлиенте
Процедура ДобавитьАрендатора(Команда)
	// Для простоты мы просто взяли самый простой элемент "Декорация" в виде прямогольника и будем с ним работать
	НовыйЭлемент = ДобавитьЭлементНаСхему("Арендатор", ГрафическаяСхема);
	
	// Уже добавленный элемент на графической схеме
	//Сообщить(НовыйЭлемент.Имя);

КонецПроцедуры

&НаКлиенте
Функция ДобавитьЭлементНаСхему(ИмяЭлемента, ГрафическаяСхема)
	
	// Получаем XML исходной схемы
	ИсходнаяСхемаXML = ПолучитьXMLТекущейСхемы(ГрафическаяСхема);
	
	// Получаем максимальный Id исходной схемы	
	ПостроительDOM					= Новый ПостроительDOM;
	ЧтениеXML						= Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ИсходнаяСхемаXML);
	ДокументDOM						= ПостроительDOM.Прочитать(ЧтениеXML);	
	СписокЭлементовDOM				= ДокументDOM.ПолучитьЭлементыПоИмени("itemId");
	МаксимальныйИД					= 0;
	Для Каждого Элемент Из СписокЭлементовDOM Цикл
		
		Попытка
			ИД = Число(Элемент.ТекстовоеСодержимое);
			Если ИД > МаксимальныйИД Тогда
				МаксимальныйИД = ИД;
			КонецЕсли;
		Исключение
		КонецПопытки;
				
	КонецЦикла;	
	МаксимальныйИД					= МаксимальныйИД + 1;	
		
	// Получаем XML эталонной схемы
	СхемаЭталон						= ПолучитьМакетНаСервере(ИмяЭлемента);	
	ЭталонСхемаСериализаторXDTO		= Новый СериализаторXDTO(ФабрикаXDTO);
	ЭталонСхемаЗаписьXML			= Новый ЗаписьXML;
	ЭталонСхемаЧтениеXML			= Новый ЧтениеXML;	
	ЭталонСхемаЗаписьDOM			= Новый ЗаписьDOM;
	ЭталонСхемаЗаписьXML.УстановитьСтроку();
	ЭталонСхемаСериализаторXDTO.ЗаписатьXML(ЭталонСхемаЗаписьXML, СхемаЭталон, НазначениеТипаXML.Явное);	
	ЭталонСхемаXML					= ЭталонСхемаЗаписьXML.Закрыть();
	
	//Считать строку XML в DOM
	ПостроительDOM					= Новый ПостроительDOM;
	ЧтениеXML						= Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ЭталонСхемаXML);
	ДокументDOM						= ПостроительDOM.Прочитать(ЧтениеXML);	
	СписокЭлементовDOM				= ДокументDOM.ПолучитьЭлементыПоИмени("item");
	
	РезультатПостроительDOM 		= Новый ПостроительDOM;
	ЧтениеXML						= Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ИсходнаяСхемаXML);
	РезультатДокументDOM			= РезультатПостроительDOM.Прочитать(ЧтениеXML);	
	
	ИтоговыйXML						= "";
	МассивИД						= Новый Массив;
	МассивДобавленныхИД				= Новый Массив;
	ИмяДобавленногоКорневогоЭлемента= "";
	КорневойЭлементВыбран			= Ложь;
	
	Для Каждого Элемент Из СписокЭлементовDOM Цикл
		
		// Получаем текст с записью
		ЗаписьХМЛ = Новый ЗаписьXML;
		ЗаписьХМЛ.УстановитьСтроку();
		ЗаписьDOM = Новый ЗаписьDOM();
		ЗаписьDOM.Записать(Элемент, ЗаписьХМЛ);		
		ВремТекст = ЗаписьХМЛ.Закрыть();
		
		Если Найти(ВремТекст, "<itemId>") = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Меняем ID и ID ссылки
		Текст = "";		
		Пока Найти(ВремТекст, "<itemId>") > 0 Цикл
			Позиция		= Найти(ВремТекст, "<itemId>") + СтрДлина("<itemId>");
			Символов	= Число(Найти(ВремТекст, "</itemId>") - Позиция);
			
			СтарыйИД	= Сред(ВремТекст, Позиция, Символов);
			НовыйИД		= Формат(МаксимальныйИД, "ЧРД=; ЧРГ=; ЧН=0; ЧГ=");
			Если СтарыйИД <> НовыйИД Тогда
				МассивИД.Добавить(Новый Структура("СтарыйИД, НовыйИД", СтарыйИД, НовыйИД));
			КонецЕсли;
			МассивДобавленныхИД.Добавить(Новый Структура("СтарыйИД, НовыйИД", СтарыйИД, НовыйИД));
			
			Текст		= Лев(ВремТекст, Позиция - 1) + НовыйИД + "</itemId>";
			ВремТекст	= Сред(ВремТекст, Найти(ВремТекст, "</itemId>") + СтрДлина("</itemId>"));
			МаксимальныйИД	= МаксимальныйИД + 1;
		КонецЦикла;		
		Если Не ПустаяСтрока(ВремТекст) Тогда
			Текст		= Текст + ВремТекст;
		КонецЕсли;

		// ItemCode
		Если НЕ КорневойЭлементВыбран И Найти(Текст, "<itemCode>") > 0 Тогда
			ВремТекст	= Текст;
			Позиция		= Найти(ВремТекст, "<itemCode>") + СтрДлина("<itemCode>");
			Символов	= Число(Найти(ВремТекст, "</itemCode>") - Позиция);
			
			СтарыйИД	= Сред(ВремТекст, Позиция, Символов);
			НовыйИД		= ИмяЭлемента + МассивДобавленныхИД[0].НовыйИД;
			
			ИмяДобавленногоКорневогоЭлемента	= НовыйИД;
			КорневойЭлементВыбран				= Истина;
			
			Текст		= Лев(ВремТекст, Позиция - 1) + НовыйИД + "</itemCode>" + Сред(ВремТекст, Найти(ВремТекст, "</itemCode>") + СтрДлина("</itemCode>"));
		КонецЕсли;
		
		// PointUUID меняем на случайный ID (Не знаю нужно ли это)
		ВремТекст = Текст;
		Текст = "";
		Пока Найти(ВремТекст, "<pointUUID>") > 0 Цикл
			Позиция		= Найти(ВремТекст, "<pointUUID>") + СтрДлина("<pointUUID>");
			Символов	= Число(Найти(ВремТекст, "</pointUUID>") - Позиция);
			
			СтарыйИД	= Сред(ВремТекст, Позиция, Символов);
			НовыйИД		= Новый УникальныйИдентификатор;			
			
			Текст		= Лев(ВремТекст, Позиция - 1) + НовыйИД + "</pointUUID>";
			ВремТекст	= Сред(ВремТекст, Найти(ВремТекст, "</pointUUID>") + СтрДлина("</pointUUID>"));
		КонецЦикла;		
		Если Не ПустаяСтрока(ВремТекст) Тогда
			Текст		= Текст + ВремТекст;
		КонецЕсли;
		
		ИтоговыйXML = ИтоговыйXML + Символы.ПС + Текст;
		
	КонецЦикла;
	
	МассивИД = СортироватьМассивИдентификаторов(МассивИД);
	Для Каждого Структура Из МассивИД Цикл
		Стр = "<connectFromItemId>" + Структура.СтарыйИД + "</connectFromItemId>";
		Пока Найти(ИтоговыйXML, Стр) > 0 Цикл
			ИтоговыйXML = СтрЗаменить(ИтоговыйXML, Стр, "<connectFromItemId>" + Структура.НовыйИД + "</connectFromItemId>");
		КонецЦикла;
		Стр = "<connectToItemId>" + Структура.СтарыйИД + "</connectToItemId>";
		Пока Найти(ИтоговыйXML, Стр) > 0 Цикл
			ИтоговыйXML = СтрЗаменить(ИтоговыйXML, Стр, "<connectToItemId>" + Структура.НовыйИД + "</connectToItemId>");
		КонецЦикла;
	КонецЦикла;
	
	
	ИсходнаяСхемаXML = Лев(ИсходнаяСхемаXML, СтрДлина(ИсходнаяСхемаXML) - СтрДлина("</FlowchartContextType>")) + ИтоговыйXML + "</FlowchartContextType>";
	НовыйСериализаторXDTO	= Новый СериализаторXDTO(ФабрикаXDTO);
	ЧтениеXML				= Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ИсходнаяСхемаXML);
	ГрафическаяСхема					= НовыйСериализаторXDTO.ПрочитатьXML(ЧтениеXML);
	
	// Перебираем схему и возвращаем добавленный элемент
	Для Каждого Элемент Из ГрафическаяСхема.ЭлементыГрафическойСхемы Цикл
		ИмяДобавленногоКорневогоЭлемента = "ОООКолокол";
		Если Элемент.Имя = ИмяДобавленногоКорневогоЭлемента Тогда
			Возврат Элемент;
		КонецЕсли;
	КонецЦикла;
	
	// Не найден добавленный элемент
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция СортироватьМассивИдентификаторов(Знач Массив)
	
   Для i = 0 По Массив.ВГраница() Цикл
        Для j = i + 1 ПО Массив.ВГраница() Цикл
            Если Массив[i].СтарыйИД < Массив[j].СтарыйИД Тогда
                Замена = Массив[j];
                Массив[j] = Массив[i];
                Массив[i] = Замена;
            КонецЕсли;            
        КонецЦикла;        
	КонецЦикла;
	
    Возврат Массив;
	
КонецФункции

&НаСервере
Функция ПолучитьМакетНаСервере(ИмяМакета)
	
	ЭтаОбработка=РеквизитФормыВЗначение("Объект");
    Возврат ЭтаОбработка.ПолучитьМакет(ИмяМакета);
	
КонецФункции


&НаКлиенте
Функция ПолучитьXMLТекущейСхемы(ГрафическаяСхема)
	
	// Получаем XML исходной схемы
	ИсходнаяСхемаСериализаторXDTO	= Новый СериализаторXDTO(ФабрикаXDTO);
	ИсходнаяСхемаЗаписьXML			= Новый ЗаписьXML;
	ИсходнаяСхемаЧтениеXML			= Новый ЧтениеXML;	
	ИсходнаяСхемаЗаписьDOM			= Новый ЗаписьDOM;
	ИсходнаяСхемаЗаписьXML.УстановитьСтроку();
	ИсходнаяСхемаСериализаторXDTO.ЗаписатьXML(ИсходнаяСхемаЗаписьXML, ГрафическаяСхема, НазначениеТипаXML.Явное);	
	ИсходнаяСхемаXML				= ИсходнаяСхемаЗаписьXML.Закрыть();
	
	Возврат ИсходнаяСхемаXML;
	
КонецФункции


&НаКлиенте
Процедура ПросмотрXML(Команда)
	
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.УстановитьТекст(ПолучитьXMLТекущейСхемы(ГрафическаяСхема));
	ТекстДок.Показать("XML");
	
КонецПроцедуры


#КонецОбласти

&НаСервере
Функция НайтиС(Имя);
	Возврат Справочники.Арендаторы.НайтиПоРеквизиту ("Имя", Имя)
КонецФункции

&НаКлиенте
Процедура ГрафическаяСхемаВыбор(Элемент)
	// проверяем, Не стена ли это или что то БЕЗ наименования
	Если Элемент.ТекущийЭлемент.Наименование <> "" Тогда
		Параметр=новый структура;
		Параметр.Вставить("Ключ", НайтиС(Элемент.ТекущийЭлемент.Имя));
		ОткрытьФорму("Справочник.Арендаторы.Форма.ФормаЭлемента",Параметр);
	КонецЕсли

КонецПроцедуры
